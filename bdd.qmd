# Behavior-driven development

```{r}
#| eval: true 
#| echo: false 
#| include: false
source("_common.R")
```

```{r}
#| label: co_box_dev
#| echo: false
#| results: asis
#| eval: true
co_box(
  color = "r", 
  look = "minimal",
  header = "Alert",
  contents = "The contents for section are being revised. Thank you for your patience."
)
```

This appendix provides more information on behavior-driven development (BDD). 

## Specifying behaviors 

BDD uses a specific format for translating application behavior into into features. These 'user stories' are typically written in the [Gherkin language](https://cucumber.io/docs/gherkin/reference/) and include the following sections:

```{verbatim}
#| code-fold: false 
#| eval: false 

Feature: title of feature
  
  As a ...
  I want ...
  So that ...
  
  Scenario 1:
    When ... 
    And ... 
    Then ...
    
  Scenario 2:
    When ... 
    And ... 
    Then ...
```

The `testthat` BDD functions can be adapted to use this format, because the `description` argument a text string and these functions can be nested.

```{r}
#| eval: false 
#| code-fold: false
testthat::describe(description = "
  Feature: Scatter Plot Data Visualization

  As a film analyst
  I want to visualize data on a scatter plot with various inputs
  So that I can analyze relationships between variables and groups in a customizable way.

  Background:
    Given the Shiny app is launched
    And I have a dataset available with continuous and categorical variables
  ", code = {
    

  testthat::describe(description = "
  Scenario: Select x and y continuous variables for plotting
    When I select the variable 'input$x' for the x-axis
    And I select the variable 'input$y' for the y-axis
    Then the scatter plot should show 'input$x' on the x-axis
    And 'input$y' on the y-axis
    ", code = {
      
    })
    
  })
```

