# Code {.unnumbered}

```{r}
#| eval: true 
#| echo: false 
#| include: false
source("_common.R")
library(shinypak)
```

## Review of Deploy

Let's briefly review what we've covered in the last three chapters:

### Docker (Chapter 15)

The [Docker chapter](docker.qmd) covered the following topics:

-   @sec-what-is-docker covers an introduction to Docker 'containerization' and images.

-   @sec-dockerfile describes the contents of a `Dockerfile` and few common commands for running R and launching Shiny apps.

-   @sec-docker-image demonstrates how to build a docker image from the command line.

    -   @sec-docker-golem takes a slight detour into using Docker with the `golem` framework.

-   @sec-docker-app-packages gives advice for using Docker in your app-package.

:::: {.callout-tip collapse='true' appearance='default'}

#### [Chapter 15 Applications]{style='font-weight: bold; font-size: 1.15em;'}

::: {style='font-size: 0.95em; color: #282b2d;'}

The applications in Chapter 15 (Docker) can be accessed with the `launch()` or `get()` functions from the [`shinypak` R package](https://mjfrigaard.github.io/shinypak/):

```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| eval: false
# install.packages('pak')
pak::pak('mjfrigaard/shinypak')
library(shinypak)
```

Chapter 15 applications:
  
```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| collapse: true
list_apps(regex = '^15')
```

::: 

::::


### CI/CD (Chapter 16)

Continuous integration and continuous deployment is demonstrated using GitHub Actions to automate three common workflows:

-   GitHub Actions are introduced with @sec-gha-style that styles and lints the code in your app-package when it's pushed to Github.

-   The next section demonstrates using the @sec-gha-shiny, creating a `renv` lockfile for your app-package, and storing/setting your `rsconnect` account info.

-   The final section combines the previous chapter into a @sec-gha-shiny-docker, which includes how to use a `Dockerfile` and a workflow file to launch you application. 

:::: {.callout-tip collapse='true' appearance='default'}

#### [Chapter 16 Applications]{style='font-weight: bold; font-size: 1.15em;'}

::: {style='font-size: 0.95em; color: #282b2d;'}

The applications in Chapter 16 (CI/CD) can be accessed with the `launch()` or `get()` functions from the [`shinypak` R package](https://mjfrigaard.github.io/shinypak/):

```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| eval: false
# install.packages('pak')
pak::pak('mjfrigaard/shinypak')
library(shinypak)
```

Chapter 16 applications:
  
```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| collapse: true
list_apps(regex = '^16')
```

::: 

::::

### pkgdown (Chapter 17)


-   @sec-pkgdown-setup: covers creating a `_pkgdown.yml` configuration file that `pkgdown` uses to build the site for your app-package. 

    -   The `_pkgdown.yml` file also lets you customize how your website looks and which parts of your package are highlighted.

-   @sec-pkgdown-site-contents demonstrates how `build_site_github_pages()` (or `build_site()`) tells `pkgdown` to go through your app-package, including the documentation, vignettes, and examples, and assemble them into a coherent, navigable website.

-   @sec-pkgdown-layouts briefly touches on the various ways you can customize your site (themes, fonts, and colors). 

-   After building your site, you'll need to deploy it with a @sec-pkgdown-workflow.

    -   This also involves creating an orphan Git branch and pushing the `pkgdown` contents to GitHub Pages.

:::: {.callout-tip collapse='true' appearance='default'}

#### [Chapter 17 Applications]{style='font-weight: bold; font-size: 1.15em;'}

::: {style='font-size: 0.95em; color: #282b2d;'}

The applications in Chapter 17 (`pkgdown`) can be accessed with the `launch()` or `get()` functions from the [`shinypak` R package](https://mjfrigaard.github.io/shinypak/):

```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| eval: false
# install.packages('pak')
pak::pak('mjfrigaard/shinypak')
library(shinypak)
```

Chapter 17 applications:
  
```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| collapse: true
list_apps(regex = '^17')
```

::: 

::::

***

## Code

### CSS

In [CSS](css.qmd), we'll discuss

### JavaScript

[JavaScript](js.qmd) covers 

### Python

The [Python](python.qmd) chapter covers 

## Style 
