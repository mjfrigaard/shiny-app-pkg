# Debugging {.unnumbered}

```{r}
#| eval: true 
#| echo: false 
#| include: false
source("_common.R")
library(shinypak)
```

```{r}
#| label: co_box_dev
#| echo: false
#| results: asis
#| eval: true
co_box(
  color = "r", 
  header = "Warning",
  contents = "The contents for section are under development. Thank you for your patience."
)
```

Expand the callout boxes below to review the previous testing chapters:

::: {.callout-note collapse='true'}

## [Test suite (Chapter 10)]{style='font-size: 1.35em;'}

[Test suite](test_suite.qmd) covers:

1. Getting started with @sec-tests-suite-use-testthat in your app-package

2. An introduction to @sec-tests-suite-bdd-intro

3. Make running tests during development easier by setting @sec-tests-suite-keyboard-shortcuts 
:::

::: {.callout-note collapse='true'}

## [Specifications (Chapter 11)]{style='font-size: 1.35em;'}

[Specifications](test_specs.qmd) dives into:

1. The differences between @sec-tests-specs-app-reqs, @sec-tests-specs-user-specs, @sec-tests-specs-features, and @sec-tests-specs-func-reqs

2. The @sec-tests-specs-bdd-testthat functions (`describe()` and `it()`) are introduced

3. Tracking features, requirements and tests with a @sec-tests-specs-traceability-matrix

:::: {.callout-tip collapse='true' appearance='default'}

### [Chapter 11 Applications]{style='font-weight: bold; font-size: 1.15em;'}

::: {style='font-size: 0.95em; color: #282b2d;'}

The applications in Chapter 11 (Specifications) can be accessed with the `launch()` or `get()` functions from the [`shinypak` R package](https://mjfrigaard.github.io/shinypak/):

```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| eval: false
# install.packages('pak')
pak::pak('mjfrigaard/shinypak')
library(shinypak)
```

Chapter 11 applications:
  
```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| collapse: true
list_apps(regex = '^11')
```

::: 

::::

:::

::: {.callout-note collapse='true'}

## [Test tools (Chapter 12)]{style='font-size: 1.35em;'}

[Test tools](test_tools.qmd) covers: 

1. Where to store and how to use test @sec-test-fixtures and @sec-test-helpers

2. Checking test coverage during @sec-test-coverage-active-file

3. Creating snapshots and @sec-test-snaps-review

:::: {.callout-tip collapse='true' appearance='default'}

### [Chapter 12 Applications]{style='font-weight: bold; font-size: 1.15em;'}

::: {style='font-size: 0.95em; color: #282b2d;'}

The applications in Chapter 12 (Test tools) can be accessed with the `launch()` or `get()` functions from the [`shinypak` R package](https://mjfrigaard.github.io/shinypak/):

```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| eval: false
# install.packages('pak')
pak::pak('mjfrigaard/shinypak')
library(shinypak)
```

Chapter 12 applications:
  
```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| collapse: true
list_apps(regex = '^12')
```

::: 

::::

:::

::: {.callout-note collapse='true'}

## [Testing modules (Chapter 13)]{style='font-size: 1.35em;'}

[Testing modules](test_modules.qmd) includes strategies for: 

1. Testing returned values with @sec-tests-mods-returned

2. Passing module arguments with @sec-tests-mods-args-list

3. Checking @sec-tests-mods-coverage and @sec-tests-mods-outputs

:::: {.callout-tip collapse='true' appearance='default'}

### [Chapter 13 Applications]{style='font-weight: bold; font-size: 1.15em;'}

::: {style='font-size: 0.95em; color: #282b2d;'}

The applications in Chapter 13 (Testing modules) can be accessed with the `launch()` or `get()` functions from the [`shinypak` R package](https://mjfrigaard.github.io/shinypak/):

```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| eval: false
# install.packages('pak')
pak::pak('mjfrigaard/shinypak')
library(shinypak)
```

Chapter 13 applications:
  
```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| collapse: true
list_apps(regex = '^13')
```

::: 

::::

:::

::: {.callout-note collapse='true'}

## [System tests (Chapter 14)]{style='font-size: 1.35em;'}

1. Introduction to @sec-tests-system-shinytest2

1. Using `shinytest2` to @sec-tests-system-recording-tests

1. Exporting test values with @sec-tests-system-test-mode

:::: {.callout-tip collapse='true' appearance='default'}

### [Chapter 14 Applications]{style='font-weight: bold; font-size: 1.15em;'}

::: {style='font-size: 0.95em; color: #282b2d;'}

The applications in Chapter 14 (System tests) can be accessed with the `launch()` or `get()` functions from the [`shinypak` R package](https://mjfrigaard.github.io/shinypak/):

```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| eval: false
# install.packages('pak')
pak::pak('mjfrigaard/shinypak')
library(shinypak)
```

Chapter 14 applications:
  
```{r}
#| code-fold: false 
#| message: false
#| warning: false
#| collapse: true
list_apps(regex = '^14')
```

::: 

::::

:::

Debugging is an essential skill for any programmer, and it's not restricted to fixing errors or broken code. 

## Utility functions

## Debugging apps 

## Print Debugging

## Exploring code