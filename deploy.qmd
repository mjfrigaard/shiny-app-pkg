# Deploy {#sec-deploy .unnumbered}

```{r}
#| eval: true 
#| echo: false 
#| include: false
source("_common.R")
```

```{r}
#| label: co_box_dev
#| echo: false
#| results: asis
#| eval: true
co_box(
  color = "o", look = "minimal",
  header = "Caution",
  contents = "This chapter is under review.",
  fold = FALSE
)
```

This section covers deploying a Shiny app-package with Docker images and containers, using GitHub Actions for Continuous Integration (CI) and Continuous Deployment (CD), and a collection of code tools for keeping your app-package scalable, easy to share, and well-documented.

## Docker

-   [This chapter](@sec-docker) covers how Docker can simplify setting up your R environment and reduce the "it works on my machine" problem.
  
    -   We'll [introduce](@sec-what-is-docker) how Docker provides a consistent environment for the application, ensuring it works seamlessly across different computers.

    -   We'll cover building our Shiny app-package [inside a Docker image](@sec-dockerfile), which can be launched into a virtual container. 




  
## Continuous Integration and Deployment with GitHub Actions

-   We'll [introduce](@sec-cicd) Continuous Integration (CI) and Continuous Deployment (CD), essential practices for modern software development. CI/CD automates the process of testing and deploying your applications.

-   This chapter will cover how [GitHub Actions](@sec-gha) (a relatively new feature within the popular code hosting platform GitHub) can automate the testing and deployment of your R Shiny app-package.

## Code Quality Tools

-   Maintaining high-quality, readable code is crucial. This chapter introduces `lintr` and `styler`, two tools specifically for R.
    -   [`lintr`:](@sec-lintr) A tool that checks your R code for potential issues and improvements.
    -   [`styler`:](@sec-styler) This tool automatically formats your R code, ensuring it is clean and follows consistent style guidelines.

-   This chapter will also cover packages for ensuring your app-package has properly documented/managed [dependencies](@sec-code-tools-dependencies) and follows 'best practices.'