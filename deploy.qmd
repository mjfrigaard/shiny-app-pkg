# Deploy {#sec-deploy .unnumbered}

```{r}
#| eval: true 
#| echo: false 
#| include: false
source("_common.R")
library(shinypak)
```

# Deploy

This section covers two common methods for deploying a Shiny app-package: 1) Docker images and containers, 2) using GitHub Actions for Continuous Integration (CI) and Continuous Deployment (CD), and 3) building and deploying a package website. 

## Docker

[Docker](docker.qmd) covers how using Docker can simplify setting up your R environment and reduce the "it works on my machine" problem:
  
-   @sec-docker-what-is-docker 

-   @sec-docker-install

-   @sec-docker-dockerfile

-   @sec-docker-build-image

-   @sec-docker-run-container

-   @sec-docker-golem

-   @sec-docker-app-packages
  
## GitHub Actions

Continuous Integration/Continuous Deployment (CI/CD) can be implemented for your Shiny app-package using [GitHub actions](gha.qmd). This chapter covers the following workflows:

-   @sec-gha-style

-   @sec-gha-shiny

-   @sec-gha-shiny-docker

## Package websites 

[`pkgdown`](pkgdown.qmd) helps us easily create websites for our app-packages. This chapter covers:
  
-   @sec-pkgdown-setup 

-   @sec-pkgdown-site-contents
    
-   @sec-pkgdown-layouts

-   @sec-pkgdown-reference
    
-   @sec-pkgdown-workflow